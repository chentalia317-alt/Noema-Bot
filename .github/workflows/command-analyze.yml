name: "Command: /analyze"

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      file:
        description: "Optional data file under data/ (e.g., baseline_cleaned_v7.csv)"
        required: false
        default: ""

permissions:
  contents: write
  issues: write
  pull-requests: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true
  
jobs:
  run:
    if: >
      ${{
        github.event_name == 'workflow_dispatch' ||
        (github.event_name == 'issue_comment' &&
         github.event.issue.pull_request == null &&
         startsWith(github.event.comment.body, '/analyze'))
      }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Resolve FILE
        id: file
        shell: bash
        run: |
          FILE_INPUT="${{ github.event_name == 'workflow_dispatch' && inputs.file || '' }}"
          if [ -z "$FILE_INPUT" ] && [ "${{ github.event_name }}" = "issue_comment" ]; then
            RAW="${{ github.event.comment.body }}"
            FILE_INPUT=$(echo "$RAW" | sed -n 's/.*file=\([A-Za-z0-9._\/-]\+\).*/\1/p')
          fi
          echo "value=$FILE_INPUT" >> "$GITHUB_OUTPUT"
          echo "Resolved FILE: ${FILE_INPUT:-<ALL>}"

      - name: Run analysis
        env:
          FILE: ${{ steps.file.outputs.value }}
        run: python scripts/analyze.py

      - name: Read summary (install jq)
        id: summary
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          MD=$(cat report_summary.json | jq -r '.markdown')
          echo "md<<EOF" >> $GITHUB_OUTPUT
          echo "$MD" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # ---- Quarkdown renderingï¼ˆneeds Java 17+ï¼‰----
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Quarkdown CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/quarkdown-labs/get-quarkdown/refs/heads/main/install.sh | sudo env "PATH=$PATH" bash
          quarkdown --version || true

      - name: Compile .qd to HTML
        run: |
          mkdir -p reports
          quarkdown c noema-report.qd -o reports
          touch reports/.nojekyll
          
      - name: List built files (recursive)
        run: |
          echo "== reports =="
          ls -Rla reports
          
      - name: Commit reports back
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add reports/ report_summary.json noema-report.qd
          git commit -m "chore: update analysis artifacts [skip ci]" || echo "no changes"
          git push

      - name: Upload artifact (reports/)
        uses: actions/upload-pages-artifact@v3
        with:
          path: reports

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

      - name: Comment back as Noema-Bot
        if: ${{ github.event_name == 'issue_comment' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.BOT_TOKEN || secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            ðŸ¤– **Noema-Bot** finished the analysis.

            **Report (full):**
            https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/reports/REPORT.md

            **Quarkdown HTML:**
            (Published by Pages after deploy) â†’ `/noema-report.html`

            (Plots & CSVs are in `reports/`.)

            ---
            ${{ steps.summary.outputs.md }}

name: "Command: /analyze"

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      file:
        description: "Optional data file under data/ (e.g., baseline_cleaned_v7.csv)"
        required: false
        default: ""

permissions:
  contents: write
  issues: write
  pull-requests: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true
  
jobs:
  run:
    if: >
      ${{
        github.event_name == 'workflow_dispatch' ||
        (github.event_name == 'issue_comment' &&
         github.event.issue.pull_request == null &&
         startsWith(github.event.comment.body, '/analyze'))
      }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Resolve FILE
        id: file
        shell: bash
        run: |
          set -euo pipefail
          IFS=$'\n\t'

          FILE_INPUT=""
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          FILE_INPUT="${{ inputs.file || '' }}"
          elif [ "${{ github.event_name }}" = "issue_comment" ]; then
          RAW="${{ github.event.comment.body }}"
     
          FILE_INPUT="$(printf '%s' "$RAW" | sed -n 's/.*file=\([A-Za-z0-9._\/-]\+\).*/\1/p' || true)"
          fi

          echo "Resolved FILE: ${FILE_INPUT:-<ALL>}"
          printf 'value=%s\n' "$FILE_INPUT" >> "$GITHUB_OUTPUT"

      - name: Run analysis
        env:
          FILE: ${{ steps.file.outputs.value }}
        run: python scripts/analyze.py

      - name: Read summary (install jq)
        id: summary
        shell: bash
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y jq
          MD="$(jq -r '.markdown' report_summary.json)"

          {
            echo 'md<<__MD__'
            printf '%s\n' "$MD"
            echo '__MD__'
          } >> "$GITHUB_OUTPUT"

      # ---- Quarkdown renderingÔºàneeds Java 17+Ôºâ----
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Quarkdown CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/quarkdown-labs/get-quarkdown/refs/heads/main/install.sh | sudo env "PATH=$PATH" bash
          quarkdown --version || true

      - name: Verify outputs exist
        run: |
          echo "== repo root ==" && ls -la
          echo "== reports dir ==" && ls -la reports || true

      - name: Compile .qd to HTML (dashboard & full report)
        shell: bash
        run: |
          set -Eeuo pipefail
          mkdir -p reports

          echo "== Checking for .qd files (root & reports/) =="
          (ls -1 *.qd 2>/dev/null || true)
          (ls -1 reports/*.qd 2>/dev/null || true)

          if [[ -f ./noema-report.qd ]]; then
            QD_MAIN=./noema-report.qd
          elif [[ -f ./reports/noema-report.qd ]]; then
            QD_MAIN=./reports/noema-report.qd
          else
            echo "::error ::noema-report.qd not found in repo root or reports/"; exit 1
          fi

          echo "üõ†Ô∏è Compile main report: $QD_MAIN"
          quarkdown c "$QD_MAIN" -o ./reports

          if [[ -f ./reports/index.html ]]; then
            :
          else
            SUBDIR="$(find ./reports -maxdepth 2 -type f -name index.html -printf '%h\n' | head -n1 || true)"
            if [[ -n "${SUBDIR:-}" && "$SUBDIR" != "./reports" ]]; then
              mv "$SUBDIR/index.html" ./reports/index.html
              [[ -d "$SUBDIR/script" ]] && cp -r "$SUBDIR/script" ./reports/ || true
              [[ -d "$SUBDIR/theme"  ]] && cp -r "$SUBDIR/theme"  ./reports/ || true
              rm -rf "$SUBDIR"
            fi
          fi


          [[ -f ./reports/index.html ]] && mv -f ./reports/index.html ./reports/report.html

          # ÈÄâ dashboard.qdÔºö‰ºòÂÖàÊ†πÁõÆÂΩïÔºåÂÖ∂Ê¨° reports/ÔºõÊ≤°ÊúâÂ∞±Áî® report.html ÂÖúÂ∫ï
          if   [[ -f ./dashboard.qd ]]; then QD_DASH=./dashboard.qd
          elif [[ -f ./reports/dashboard.qd ]]; then QD_DASH=./reports/dashboard.qd
          else QD_DASH=""
          fi

          if [[ -n "$QD_DASH" ]]; then
            echo "üõ†Ô∏è Compile dashboard: $QD_DASH"
            quarkdown c "$QD_DASH" -o ./reports
            if [[ ! -f ./reports/index.html ]]; then
              DDIR="$(find ./reports -maxdepth 2 -type f -name index.html -printf '%h\n' | head -n1 || true)"
              if [[ -n "${DDIR:-}" && "$DDIR" != "./reports" ]]; then
                mv "$DDIR/index.html" ./reports/index.html
                [[ -d "$DDIR/script" ]] && cp -r "$DDIR/script" ./reports/ || true
                [[ -d "$DDIR/theme"  ]] && cp -r "$DDIR/theme"  ./reports/ || true
                rm -rf "$DDIR"
              fi
            fi
          else
            echo "dashboard.qd not found ‚Üí use report.html as index"
            cp -f ./reports/report.html ./reports/index.html
          fi

          touch ./reports/.nojekyll
          echo "== final reports tree =="
          ls -Rla ./reports
          
      - name: List built files (recursive)
        run: |
          echo "== reports =="
          ls -Rla reports
          
      - name: Commit reports back
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add reports/ report_summary.json noema-report.qd
          git commit -m "chore: update analysis artifacts [skip ci]" || echo "no changes"
          git push

      - name: Upload artifact (reports/)
        uses: actions/upload-pages-artifact@v3
        with:
          path: reports

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

      - name: Comment back as Noema-Bot
        if: ${{ github.event_name == 'issue_comment' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.BOT_TOKEN || secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            ü§ñ **Noema-Bot** finished the analysis.

            **Report (full):**
            https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/reports/REPORT.md

            **Quarkdown HTML:**
            (Published by Pages after deploy) ‚Üí `/noema-report.html`

            (Plots & CSVs are in `reports/`.)

            ---
            ${{ steps.summary.outputs.md }}
